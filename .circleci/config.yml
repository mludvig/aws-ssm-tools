version: 2.1

# Reusable commands for efficiency
commands:
  install_uv:
    steps:
      - run:
          name: Install uv
          command: |
            curl -LsSf https://astral.sh/uv/install.sh | sh
            echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> ~/.bashrc
      
      - run:
          name: Install dependencies
          command: |
            export PATH="$HOME/.cargo/bin:$PATH"
            ./dev.sh install

workflows:
  build_and_publish:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - publish:
          requires:
            - build
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/

jobs:
  build:
    docker:
      - image: cimg/python:3.12

    steps:
      - checkout
      - install_uv

      - run:
          name: Run code quality checks
          command: |
            export PATH="$HOME/.cargo/bin:$PATH"
            ./dev.sh check

      - run:
          name: Build package
          command: |
            export PATH="$HOME/.cargo/bin:$PATH"
            ./dev.sh build

  publish:
    docker:
      - image: cimg/python:3.12

    steps:
      - checkout
      - install_uv

      - run:
          name: Verify git tag vs. version
          command: |
            export PATH="$HOME/.cargo/bin:$PATH"
            tag_version="${CIRCLE_TAG#v}"
            package_version=$(./dev.sh version)
            echo "Git tag version: $tag_version"
            echo "Package version: $package_version"
            if [ "$tag_version" != "$package_version" ]; then
              echo "Error: Git tag version ($tag_version) does not match package version ($package_version)"
              exit 1
            fi

      - run:
          name: Configure PyPI credentials
          command: |
            # Configure twine for PyPI upload
            cat > ~/.pypirc << EOF
            [distutils]
            index-servers = pypi
            
            [pypi]
            username = __token__
            password = $PYPI_TOKEN
            EOF

      - run:
          name: Upload to PyPI
          command: |
            export PATH="$HOME/.cargo/bin:$PATH"
            ./dev.sh upload
